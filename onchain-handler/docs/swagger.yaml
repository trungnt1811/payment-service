definitions:
  dto.NetworkBalanceDTO:
    properties:
      network:
        type: string
      token_balances:
        items:
          $ref: '#/definitions/dto.TokenBalanceDTO'
        type: array
    type: object
  dto.NetworkMetadataDTO:
    properties:
      alias:
        type: string
      icon_base64:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  dto.PaginationDTOResponse:
    properties:
      data:
        items: {}
        type: array
      next_page:
        type: integer
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  dto.PaymentHistoryDTO:
    properties:
      amount:
        type: string
      created_at:
        type: string
      from_address:
        type: string
      network:
        type: string
      to_address:
        type: string
      token_symbol:
        type: string
      transaction_hash:
        type: string
    type: object
  dto.PaymentOrderDTOResponse:
    properties:
      amount:
        type: string
      block_height:
        type: integer
      created_at:
        type: string
      event_histories:
        items:
          $ref: '#/definitions/dto.PaymentHistoryDTO'
        type: array
      expired:
        type: integer
      id:
        type: integer
      network:
        type: string
      payment_address:
        type: string
      request_id:
        type: string
      status:
        type: string
      succeeded_at:
        type: string
      symbol:
        type: string
      transferred:
        type: string
      upcoming_block_height:
        type: integer
      webhook_url:
        type: string
    type: object
  dto.PaymentOrderNetworkPayloadDTO:
    properties:
      network:
        type: string
      request_id:
        type: string
    type: object
  dto.PaymentOrderPayloadDTO:
    properties:
      amount:
        type: string
      network:
        type: string
      request_id:
        type: string
      symbol:
        type: string
      webhook_url:
        type: string
    type: object
  dto.PaymentStatistics:
    properties:
      period_start:
        type: integer
      symbol:
        type: string
      total_amount:
        type: string
      total_orders:
        type: integer
      total_transferred:
        type: string
    type: object
  dto.PaymentWalletBalanceDTO:
    properties:
      address:
        type: string
      id:
        type: integer
      network_balances:
        items:
          $ref: '#/definitions/dto.NetworkBalanceDTO'
        type: array
    type: object
  dto.PaymentWalletDTO:
    properties:
      address:
        type: string
      id:
        type: integer
      in_use:
        type: boolean
    type: object
  dto.TokenBalanceDTO:
    properties:
      amount:
        type: string
      symbol:
        type: string
    type: object
  dto.TokenTransferPayloadDTO:
    properties:
      from_address:
        type: string
      network:
        type: string
      request_id:
        type: string
      symbol:
        type: string
      to_address:
        type: string
      token_amount:
        type: string
    type: object
  dto.TokenTransferResultDTOResponse:
    properties:
      error_message:
        type: string
      request_id:
        type: string
      status:
        type: boolean
    type: object
  response.GeneralError:
    properties:
      code:
        type: integer
      errors:
        items:
          type: string
        type: array
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/metadata/networks:
    get:
      consumes:
      - application/json
      description: Retrieves all networks metadata.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.NetworkMetadataDTO'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Retrieves all networks metadata.
      tags:
      - metadata
  /api/v1/payment-order/{request_id}:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves a payment order by its request ID, which
        can contain special characters.
      parameters:
      - description: Payment order request ID
        in: path
        name: request_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful retrieval of payment order
          schema:
            $ref: '#/definitions/dto.PaymentOrderDTOResponse'
        "400":
          description: Invalid request ID
          schema:
            $ref: '#/definitions/response.GeneralError'
        "404":
          description: Payment order not found
          schema:
            $ref: '#/definitions/response.GeneralError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Retrieve payment order by request ID
      tags:
      - payment-order
  /api/v1/payment-order/network:
    put:
      consumes:
      - application/json
      description: This endpoint allows updating the network of a payment order.
      parameters:
      - description: Payment order ID and network (AVAX C-Chain or BSC).
        in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/dto.PaymentOrderNetworkPayloadDTO'
      produces:
      - application/json
      responses:
        "200":
          description: 'Success response: {\"success\": true}'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Unsupported network
          schema:
            $ref: '#/definitions/response.GeneralError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Update payment order network
      tags:
      - payment-order
  /api/v1/payment-orders:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves payment orders based on optional filters
        such as status, from_address, network, and sorting options.
      parameters:
      - description: Vendor ID for authentication
        in: header
        name: Vendor-Id
        required: true
        type: string
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Page size, default is 10
        in: query
        name: size
        type: integer
      - collectionFormat: csv
        description: List of request IDs to filter (maximum 50)
        in: query
        items:
          type: string
        name: request_ids
        type: array
      - description: Filter by sender's address (from_address)
        in: query
        name: from_address
        type: string
      - description: Filter by network (e.g., BSC, AVAX C-Chain)
        in: query
        name: network
        type: string
      - description: Status filter (e.g., PENDING, PROCESSING, SUCCESS, PARTIAL, EXPIRED,
          FAILED)
        in: query
        name: status
        type: string
      - description: Sorting parameter in the format `field_direction` (e.g., id_asc,
          created_at_desc, succeeded_at_desc)
        in: query
        name: sort
        type: string
      - description: Start time in UNIX timestamp format to filter (e.g., 1704067200)
        in: query
        name: start_time
        type: integer
      - description: End time in UNIX timestamp format to filter (e.g., 1706745600)
        in: query
        name: end_time
        type: integer
      - description: Field to filter time (e.g., created_at or succeeded_at)
        in: query
        name: time_filter_field
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful retrieval of payment order histories
          schema:
            $ref: '#/definitions/dto.PaginationDTOResponse'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.GeneralError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Retrieve payment orders
      tags:
      - payment-order
    post:
      consumes:
      - application/json
      description: This endpoint allows creating payment orders for users.
      parameters:
      - description: Vendor ID for authentication
        in: header
        name: Vendor-Id
        required: true
        type: string
      - description: List of payment orders. Each order must include request id, amount,
          symbol (USDT) and network (AVAX C-Chain or BSC).
        in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.PaymentOrderPayloadDTO'
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: 'Success created: {\"success\": true, \"data\": []dto.CreatedPaymentOrderDTO}'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/response.GeneralError'
        "412":
          description: Duplicate key value
          schema:
            $ref: '#/definitions/response.GeneralError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Create payment orders
      tags:
      - payment-order
  /api/v1/payment-statistics:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves payment statistics based on granularity
        and time range.
      parameters:
      - description: Vendor ID for authentication
        in: header
        name: Vendor-Id
        required: true
        type: string
      - description: Granularity (DAILY, WEEKLY, MONTHLY, YEARLY)
        in: query
        name: granularity
        required: true
        type: string
      - description: Start time in UNIX timestamp format
        in: query
        name: start_time
        required: true
        type: integer
      - description: End time in UNIX timestamp format
        in: query
        name: end_time
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Payment statistics retrieved successfully
          schema:
            items:
              $ref: '#/definitions/dto.PaymentStatistics'
            type: array
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.GeneralError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Retrieve payment statistics
      tags:
      - payment-statistics
  /api/v1/payment-wallet/{address}:
    get:
      consumes:
      - application/json
      description: Retrieves a payment wallet by its address.
      parameters:
      - description: Address
        in: path
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.PaymentWalletDTO'
        "400":
          description: Invalid address
          schema:
            $ref: '#/definitions/response.GeneralError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Retrieves a payment wallet by its address.
      tags:
      - payment-wallet
  /api/v1/payment-wallets/balances:
    get:
      consumes:
      - application/json
      description: Retrieves all payment wallets with balances grouped by network
        and token.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.PaymentWalletBalanceDTO'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Retrieves all payment wallets with balances.
      tags:
      - payment-wallet
  /api/v1/payment-wallets/receiving-address:
    get:
      consumes:
      - application/json
      description: Retrieves the address of the wallet used for receiving tokens from
        payment wallets.
      produces:
      - application/json
      responses:
        "200":
          description: Receiving wallet address
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Retrieves the receiving wallet address.
      tags:
      - payment-wallet
  /api/v1/token-transfer:
    post:
      consumes:
      - application/json
      description: This endpoint allows the distribution of tokens to multiple recipients.
        It accepts a list of transfer requests, validates the payload, and processes
        the token transfers based on the transaction type.
      parameters:
      - description: List of transfer requests. Each request must include request
          id, from address, to address, amount, symbol (USDT) and network (AVAX C-Chain).
        in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.TokenTransferPayloadDTO'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Successful distribution of tokens
          schema:
            items:
              $ref: '#/definitions/dto.TokenTransferResultDTOResponse'
            type: array
        "400":
          description: Invalid payload or invalid recipient address/transaction type
          schema:
            $ref: '#/definitions/response.GeneralError'
        "500":
          description: Internal server error, failed to distribute tokens
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Distribute tokens to recipients
      tags:
      - token-transfer
  /api/v1/token-transfers:
    get:
      consumes:
      - application/json
      description: This endpoint fetches a paginated list of token transfer histories
        filtered by time range and addresses.
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Page size, default is 10
        in: query
        name: size
        type: integer
      - description: Start time in UNIX timestamp format
        in: query
        name: start_time
        type: integer
      - description: End time in UNIX timestamp format
        in: query
        name: end_time
        type: integer
      - description: Filter by sender address
        in: query
        name: from_address
        type: string
      - description: Filter by recipient address
        in: query
        name: to_address
        type: string
      - description: Sorting parameter in the format `field_direction` (e.g., id_asc,
          created_at_desc)
        in: query
        name: sort
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful retrieval of token transfer histories
          schema:
            $ref: '#/definitions/dto.PaginationDTOResponse'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.GeneralError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Get list of token transfer histories
      tags:
      - token-transfer
  /api/v1/user-wallets:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves wallets based on a list of user IDs.
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Page size, default is 10
        in: query
        name: size
        type: integer
      - collectionFormat: csv
        description: List of user IDs to filter
        in: query
        items:
          type: string
        name: user_ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Successful retrieval of user wallets
          schema:
            $ref: '#/definitions/dto.PaginationDTOResponse'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/response.GeneralError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Retrieve user wallets
      tags:
      - user-wallet
    post:
      consumes:
      - application/json
      description: This endpoint allows creating wallets for a list of user IDs.
      parameters:
      - description: List of user IDs
        in: body
        name: user_ids
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "201":
          description: 'Success created: {\"success\": true, \"data\": []dto.UserWalletPayloadDTO}'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid payload
          schema:
            $ref: '#/definitions/response.GeneralError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/response.GeneralError'
      summary: Create wallets for users
      tags:
      - user-wallet
swagger: "2.0"
