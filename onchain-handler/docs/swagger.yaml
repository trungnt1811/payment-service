definitions:
  dto.PaginationDTOResponse:
    properties:
      data:
        items: {}
        type: array
      next_page:
        type: integer
      page:
        type: integer
      size:
        type: integer
      total:
        type: integer
    type: object
  dto.PaymentOrderPayloadDTO:
    properties:
      amount:
        type: string
      network:
        type: string
      request_id:
        type: string
      symbol:
        type: string
    type: object
  dto.TokenTransferPayloadDTO:
    properties:
      from_address:
        type: string
      network:
        type: string
      request_id:
        type: string
      symbol:
        type: string
      to_address:
        type: string
      token_amount:
        type: string
    type: object
  utils.GeneralError:
    properties:
      code:
        description: HTTP error code, or custom error code
        type: integer
      errors:
        description: List of error send server 2 server
        items:
          type: string
        type: array
      string:
        description: Friendly error message
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/payment-orders:
    post:
      consumes:
      - application/json
      description: This endpoint allows creating payment orders for users.
      parameters:
      - description: List of payment orders. Each order must include request id, amount,
          symbol (USDT) and network (AVAX C-Chain).
        in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.PaymentOrderPayloadDTO'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: 'Success response: {\"success\": true, \"data\": []interface{}}'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create payment orders
      tags:
      - payment-order
  /api/v1/payment-orders/histories:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves payment order histories based on request
        IDs and an optional status filter.
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Page size, default is 10
        in: query
        name: size
        type: integer
      - collectionFormat: csv
        description: List of request IDs to filter
        in: query
        items:
          type: string
        name: request_ids
        type: array
      - description: Status filter (e.g., PENDING, SUCCESS, PARTIAL, EXPIRED, FAILED)
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful retrieval of token transfer histories
          schema:
            $ref: '#/definitions/dto.PaginationDTOResponse'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/utils.GeneralError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.GeneralError'
      summary: Retrieve payment order histories
      tags:
      - payment-order
  /api/v1/token-transfer:
    post:
      consumes:
      - application/json
      description: This endpoint allows the distribution of tokens to multiple recipients.
        It accepts a list of transfer requests, validates the payload, and processes
        the token transfers based on the transaction type.
      parameters:
      - description: List of transfer requests. Each request must include request
          id, from address, to address, amount, symbol (USDT) and network (AVAX C-Chain).
        in: body
        name: payload
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.TokenTransferPayloadDTO'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: 'Success response: {\"success\": true, \"results\": [{\"request_id\":
            \"requestID1\", \"status\": true, \"error_message\": \"\"}, {\"request_id\":
            \"requestID2\", \"status\": false, \"error_message\": \"Failed: some error
            message\"}]}'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid payload or invalid recipient address/transaction type
          schema:
            $ref: '#/definitions/utils.GeneralError'
        "500":
          description: Internal server error, failed to distribute tokens
          schema:
            $ref: '#/definitions/utils.GeneralError'
      summary: Distribute tokens to recipients
      tags:
      - token-transfer
  /api/v1/token-transfer/histories:
    get:
      consumes:
      - application/json
      description: This endpoint fetches a paginated list of token transfer histories
        filtered by request IDs and time range.
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Page size, default is 10
        in: query
        name: size
        type: integer
      - collectionFormat: csv
        description: List of request IDs to filter
        in: query
        items:
          type: string
        name: request_ids
        type: array
      - description: Start time in RFC3339 format to filter example(
        example: '"2024-01-01T00:00:00Z"'
        in: query
        name: start_time
        type: string
      - description: End time in RFC3339 format to filter example(
        example: '"2024-02-01T00:00:00Z"'
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successful retrieval of token transfer histories
          schema:
            $ref: '#/definitions/dto.PaginationDTOResponse'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/utils.GeneralError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.GeneralError'
      summary: Get list of token transfer histories
      tags:
      - token-transfer
  /api/v1/user-wallets:
    get:
      consumes:
      - application/json
      description: This endpoint retrieves wallets based on a list of user IDs.
      parameters:
      - description: Page number, default is 1
        in: query
        name: page
        type: integer
      - description: Page size, default is 10
        in: query
        name: size
        type: integer
      - collectionFormat: csv
        description: List of user IDs to filter
        in: query
        items:
          type: string
        name: user_ids
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: Successful retrieval of user wallets
          schema:
            $ref: '#/definitions/dto.PaginationDTOResponse'
        "400":
          description: Invalid parameters
          schema:
            $ref: '#/definitions/utils.GeneralError'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/utils.GeneralError'
      summary: Retrieve user wallets
      tags:
      - user-wallet
    post:
      consumes:
      - application/json
      description: This endpoint allows creating wallets for a list of user IDs.
      parameters:
      - description: List of user IDs
        in: body
        name: user_ids
        required: true
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: 'Success response: {\"success\": true, \"data\": []interface{}}'
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid payload
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties: true
            type: object
      summary: Create wallets for users
      tags:
      - user-wallet
swagger: "2.0"
